{{define "list"}}
	{{template "main"}}
	<ul id="clientes" class="list-group list-group-horizontal-md">
		{{range $index, $cliente := .}}
	  		<li class="list-group-item list-group-item-action" onclick="ejecuta({{$index}})" cliente="{{$index}}">{{.Name}}</li>
		{{end}}
	</ul>

        {{range $index, $cliente := .}}
		<div class="card" hidden cliente="{{$index}}">
		  <div class="card-header">
        	        <div class="d-flex bd-highlight">
				<div class="p-2 flex-grow-1 bd-highlight">
					{{.Name}} 
				</div>
				<div class="p-2 bd-highlight">
				<a href="/client/remove/{{.ID}}">
					<button type="button" class="btn btn-danger" href="">Eliminar</button>
				</a>
			</div>
			</div>
			  <ul class="nav nav-tabs card-header-tabs">
    			  <li class="nav-item active" onclick="showOrders({{$index}})">
    			    <a class="nav-link active" href="#">Ordenes</a>
    			  </li>
    			  <li class="nav-item" onclick="showEdit({{$index}})">
    			    <a class="nav-link" href="#">Editar</a>
    			  </li>
    			</ul>
		  </div>
		  <div class="card-body" >
		  	{{template "orders" .}}
		  </div>
		  <div class="card-body" hidden >
		  	{{template "edit" .}}
		  </div>
		</div>
        {{end}}

	{{template "footer"}}
	{{template "scripts"}}
{{end}}

{{define "scripts"}}
	
	<script>
		let selectedClient = -1; //Nil

		function eliminarOrden(id, clientId, indexList){
			let url = `/orders/remove/${id}?clientid=${clientId}` 
			fetch(url, {
				method: "DELETE"
			}).then(r =>{
				r.ok?deleteOrderDom(indexList):
					console.log("Error al agregar")
			}).catch(error =>{
				console.log("No hay internet")
			})
			
		}
		function ejecuta(index){
			//Verificar si no estoy ocultando el cliente que voy a mostrar
			if(selectedClient !== index){
				let query = `#clientes > li[cliente="${index}"]`
				let clienteDOM = document.querySelector(query)	

				if(selectedClient != -1){
					hideOldCliente(selectedClient)
				}
				showCliente(index)
				selectedClient = index
			}
		}

		function showCliente(index){
			getDOMClient(index).hidden = false;	
		}

		function hideOldCliente(index){
			getDOMClient(index).hidden = true;	
		}
		function getDOMClient(index){
			let query = `div.card[cliente="${index}"]`
			return document.querySelector(query)	
		}
		function toggleClientTabs(index){
			let tabEditar = getDOMClient(index).querySelector('div>.nav .nav-item>a:not(.active)')
			let tabOrders = getDOMClient(index).querySelector('div>.nav .nav-item>a.active')

			tabEditar.classList.toggle("active")
			tabOrders.classList.toggle("active")

			let cardActive = getDOMClient(index).querySelector('div>.card-body:not([hidden])')
			let cardHidden = getDOMClient(index).querySelector('div>.card-body[hidden]')
			cardActive.hidden = true
			cardHidden.hidden = false
		}
		function showEdit(index){
			toggleClientTabs(index)
		}
		function showOrders(index){
			toggleClientTabs(index)
		}

		function createOrder(e){
			e.preventDefault()

			let formOrder = getDOMClient(selectedClient).querySelector("#createOrder")	
			let form = new FormData(formOrder)
			
			fetch("/orders/create", {
				method: "POST",
				body:form
			}).then(r =>{
				r.ok?agregarOrderDom(form):
					console.log("Error al agregar")
			}).catch(error =>{
				console.log("No hay internet")
			})
		}

		//TODO Esto puede tronar si no hay elemento que clonar
		function agregarOrderDom(form){
			let text = `Numero: ${form.get("number")} | Invoice: ${form.get("invoice")}`
			let clone = getOrdersDOM().lastElementChild.cloneNode(true);
			clone.order = parseInt(clone.order) + 1 
			clone.firstElementChild.innerText = text		
			getOrdersDOM().appendChild(clone)
		}

		function deleteOrderDom(index){
			getOrdersDOM().querySelector(`[order="${index}"]`).remove()
		}

		function getOrdersDOM(){
			return getDOMClient(selectedClient).getElementsByTagName("ul")[1]
		}
	</script>
{{end}}

{{define "orders"}}
	<div class="d-flex bd-highlight">
		<div class="p-2 bd-highlight">
			<a href="/orders/new?clientid={{.ID}}">
				<button class="btn btn-primary">Nueva orden</button>
			</a>	
		</div>
	</div>
		<div class="card">
		  <div class="card-header">
		  	<h1>Nueva orden</h1>
		  </div>
		  <div class="card-body" >
		  	{{template "newOrder" .Orm.ID}}
		  </div>
		</div>
        <ul class="list-group">
            {{range $index, $order := .Orders}}
                <li class="d-flex bd-highlight list-group-item" order="{{$index}}">
			<div class="p-2 flex-grow-1 bd-highlight">
				Numero: {{.Number}} |
				Invoice: {{.Invoice}} |
				{{range .Mails}}
					{{.Direction}}
				{{end}}
			</div>
			<div class="p-2 bd-highlight">
				<button class="btn btn-primary" type="button" onclick="eliminarOrden({{.ID}}, {{.ClientID}}, {{$index}})">
					Eliminar
				</button>
				<a href="/orders/edit/{{.ID}}">Edit</a>	
			</div>
		</li>
            {{end}}
        </ul>
{{end}}
